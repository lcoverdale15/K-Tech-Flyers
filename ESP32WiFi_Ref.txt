#include <WiFi.h>
#include <WiFiAP.h>
#include <WiFiClient.h>
#include <WiFiGeneric.h>
#include <WiFiMulti.h>
#include <WiFiSTA.h>
#include <WiFiScan.h>
#include <WiFiServer.h>
#include <WiFiType.h>
#include <WiFiUdp.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>
#include <string.h>

#define Length 20
const char* ssid = "ECE631Lab";
const char* password = "esp32#IOT#";
const char* mqtt_server = "192.168.1.102";

WiFiClient espClient;
PubSubClient client(espClient);

const unsigned int PWM_FREQUENCY = 16;
const unsigned int PWM_CHANNEL = 6;
const unsigned int PWM_RESOLUTION = 12;
unsigned int dutyCycle = 16;
unsigned long highTime = 0;
unsigned long finalTime = 0;
float distance = 0;
bool high = false;

StaticJsonDocument<200> doc;

unsigned long sum = 0;
unsigned int i = 0;
unsigned long samples[Length];

void interruptHandler(){
  if(!high && digitalRead(4) == HIGH){
    high = true;
    highTime = micros() % 0xFFFF;
  }
  else if(high && digitalRead(4) == LOW){
    high = false;
    finalTime = (micros() % 0xFFFF) - highTime;
    MovingAverage((unsigned long)(finalTime));
  }
}

void MovingAverage(unsigned long in){
  sum = sum + in - samples[i];
  samples[i] = in;
  i = (i + 1) % Length;
}

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP32S3 Client";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe("ece631/Lab5/LED/Action");
      // Once connected, publish an announcement...
      client.publish("outTopic", "hello world");
      // ... and resubscribe
      client.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  for(int j = 0; j < Length; j++){
    samples[j] = 0;
  }
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  // put your setup code here, to run once:
  pinMode(PWM_CHANNEL, OUTPUT);
  pinMode(4, INPUT);
  attachInterrupt(digitalPinToInterrupt(4), interruptHandler, CHANGE);
  ledcAttach(PWM_CHANNEL,PWM_FREQUENCY,PWM_RESOLUTION);
  ledcWrite(PWM_CHANNEL, dutyCycle);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  // put your main code here, to run repeatedly:
  delay(1000);
  distance = sum / Length;
  distance = distance / 148.1;
  Serial.println(distance);
  doc["Distance"] = distance;
  doc["units"] = "inches";
  char buffer[128];
  serializeJson(doc, buffer);
  client.publish("ece631/Lab7/Distance/SensorID/0", buffer);

}
